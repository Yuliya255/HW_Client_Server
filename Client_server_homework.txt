HW
Client_Server
1) Прочитать про клиент-серверную архитектуру
Клиен-серверная архитектура - это такая архитектура в которой есть заказчики услуг - клиенты и поставщики услуг - сервера.
Клиент - компьютер, телефон, все то,что отправляет запрос.
Сервер - специальное оборудование или очень мощный компьютер.
Клиент-серверная архитектура бывает:
1. Одноуровневая -----> клиент + сервер
2. Трьохуровневая -----> клиент + сервер + база данных
3. Многоуровневая -----> клиент + сервер + база данных + сервер
Клиент бывает:
1.Тонкий - это програма клиент, которая все или большую часть заданий переносит на сервер.
2.Толстый - это програма клиент, которая независима от центрального сервера и все операции происходят на клиенте, а сервер может использоватся,например, только как база данных.

2) Что такое HTTP и HTTPS
HTTP - протокол передачи данных, клиент и сервер общаются через него.
HTTPS - более надежный протокол, информация попадает на сервер в зашифрованном виде.

3) HTTP методы
1.Get - запрос информации от сервера;
2.Post - добавление информации на сервер; 
3.Put - обновление информации на сервере;
4.Delete - удаление информации на сервере;
5.Opcions - запрашивает информацию о методах доступа к ресурсу;
6.Patch - частичное или полное обновление информации на сервере;
7.Head - похожий на get, но возвращается только статус код и headers, без тела ответа.

4) HTTP статус коды сервера
1.100 - информационные;
2.200 - успех;
3.300 - перенаправление;
4.400 - ошибка на стороне клиента;
5.500 - ошибка на стороне сервера.

5) Что такое ядро браузера


6) Какие браузеры какиие ядра используют

7) Что такое API
8. Что такое ендпоинты
9) URL (URI, URL, URN)
URI - 
URL -
URN - 
10) Идемпотентные HTTP методы
Это такие методы, которые 
11) Безопасные HTTP методы
12) Иденфикация, Аутентификация, Авторизация
13) Что такое IP
14) Что такое октаты в DNS
15) Что такое порт, сколько портов у Linux сервера
16) Уровни OSI
Aplication ----> прикладной, его задача использовать свои протоколы, чтобы пользователь увидел данные в понятном ему виде
Presentation ----> уровень представления. его цель подать данные в понятном виде.
Session ----> сеансовый, отвечает за поддержку сеанса или сессии связи.
Transport ----> транспортный, происходит транспортировка пакетов.
Network ----> сетевой, маршрутизаторы(роутеры) занимаются построением маршрута от одного устройства к другому.
Data link ----> канальный, получает биты ,превращает их в кадры с адресом отправителя и получателя и отправляет их по сети.
Physical ----> физический, передача битов по проводам (оптоволокно) или без (Bluetooth или Wi-Fi)

17) Хедеры http запросов
